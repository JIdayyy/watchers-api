// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../src/generated/graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  first_name    String
  last_name     String
  email         String          @unique
  /// @TypeGraphQL.omit(output: true)
  password      String
  is_disabled   Boolean
  avatar        String?
  role          Role[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  ResetPassword ResetPassword[]
  Post          Post[]
}

model Post {
  id            String    @id @default(uuid())
  slug          String    @unique
  title         String
  cover_picture String?
  content       String
  isDraft       Boolean   @default(false)
  author        User      @relation(fields: [userId], references: [id])
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  userId        String
  Category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?
  Tags          Tag[]

}

model Tag {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Post       Post[]
}

model Category {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Post       Post[]
}

model ResetPassword {
  id         String   @id @default(uuid())
  /// @TypeGraphQL.omit(output: true, input: true)
  user       User     @relation(fields: [user_id], references: [id])
  /// @TypeGraphQL.omit(output: true, input: true)
  user_id    String
  /// @TypeGraphQL.omit(output: true, input: true)
  token      String   @unique
  /// @TypeGraphQL.omit(output: true, input: true)
  created_at DateTime @default(now())
  /// @TypeGraphQL.omit(output: true, input: true)
  updated_at DateTime @updatedAt
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MANAGER
  USER
}
